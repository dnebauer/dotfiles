#
# Local configuration file for NeoMutt
#


# NOTES


# Quoting $variables    {{{1
# * enclose values containing a $variable with double-quotes
# * using single-quotes does not appear to work

# <Ctrl>+key bindings    {{{1
# * in binding use '\cx' for <Ctrl>+x key combination
# * can use either upper- or lowercase key in binding (case-insensitive)
# * if both <Ctrl>+x and <Ctrl>+X are present, the last binding wins
# * press either <Ctrl>+x and <Ctrl>+X to trigger binding (case-insensitive)
# * in neomutt help both <Ctrl>+x and <Ctrl>+X are shown as '^X'

# <Esc>+key bindings    {{{1
# * in binding use '<Esc>x' for <Esc>+x key combination
# * case-sensitive
# * see below for interaction with <Alt>+x key combinations

# <Alt>+key bindings    {{{1
# * in binding use '\ex' for <Alt>+x key combination
# * case-sensitive
# * is displayed in neomutt help as '<Esc>x'
# * <Alt>+key is a synonym for <Esc>+key
# * both key combinations can be used to trigger the bound function
# * if both <Alt> and <Esc> bindings for the same key are present,
#   the last binding wins

# Generic bindings    {{{1
# * apply to *all* menus *except*:
#   - pager
#   - editor

# Reset bindings    {{{1
# * the 'clear-settings.rc' file clears all bindings from modes:
#   - generic
#   - index
#   - pager
#   - editor
#   - attach
# * bindings for these modes must be restored in this file

# Binding annotations    {{{1
# * a binding's modes are indicated by '[xy]' notation, with:
#   - g = generic
#   - i = index
#   - p = pager
#   - e = editor
#   - a = attach
# }}}1


# LOAD/RELOAD CONFIGURATION


# Clear settings (make script idempotent)    {{{1

source neomuttrc.d/clear-settings.rc

# Set custom variables    {{{1

set my_name = 'David Nebauer'
set my_email = 'david@nebauer.id.au'
set my_maildir = $HOME/.local/mail/maildirs
set my_account = personal
set my_mailbox = $my_maildir/$my_account
set my_cfgdir = $HOME/.config/neomutt
set my_cfgdir_d = $my_cfgdir/neomuttrc.d
set my_alias = $my_cfgdir/aliases
set my_config = $my_cfgdir/neomuttrc
set my_mailcap = $my_cfgdir/mailcap
set my_utils = $HOME/.local/mail/utils
set my_fetch_script = $my_utils/my-get-mail
set my_nvim_args = $my_utils/neomutt_nvim-args.vim
set my_print_pdf = $my_utils/neomutt_print-to-pdf
set my_send_clipboard = $my_utils/neomutt_eml-content-to-clipboard
set my_trim_quotes = $my_utils/neomutt_trim-quotes
set my_signature = $my_cfgdir_d/signature
set my_download_dir = $HOME/Downloads
set my_cache = $HOME/.cache/neomutt
set my_header_cache = $my_cache/cache-headers
set my_message_cache = $my_cache/cache-messages
set my_msmtpq = $HOME/.local/bin/msmtpq
set my_file_picker = $my_utils/neomutt_file-picker
set my_picker_cache = $my_cache/picker-cache

# Bindings    {{{1

# [gibp] <Ctrl>+r : reload configuration
# - overrides [ip] ^R = <read-thread> (marks current thread as read)
macro generic,index,browser,pager \cr "\
<enter-command>echo 'Reloading configuration...<enter>\
<enter-command>source $my_config<enter>\
<enter-command>echo 'Reloaded $my_config'<enter>\
"    'clear hooks and reload configuration'
# }}}1


# MANAGE MAILBOXES


# Standard mailboxes    {{{1

set mbox_type = Maildir
    # default mailbox type
set folder = $my_mailbox
    # default location of mailboxes
set record = +INBOX.Sent
    # sent folder
set trash = +INBOX.Trash
    # trash folder
set postponed = +INBOX.Drafts
    # drafts folder
set spool_file = +INBOX
    # inbox folder

# Virtual mailboxes    {{{1

set nm_default_url = 'notmuch:///home/david/.local/mail/maildirs'
    # cannot use 'folder', must use 'nm_default_url'
set vfolder_format = '%6n(%6N) %f'
    # file browser display format for vfolders
set maildir_check_cur
    # poll maildir 'cur' directory as well as 'new' directory
set nm_query_type = threads
    # default query type {threads,messages}
set nm_record
    # add sent messages to notmuch database
set nm_record_tags = "-inbox,+archive,+sent"
    # adjust tags of sent messages added to notmuch database
set sort = date
    # index menu sort value
    # {date,date-received,from,score,size,spam,subject,threads,to,unsorted}
set sort_aux = last-date-received
    # index menu secondary sort value
set spool_file = 'Inbox'
    # if not set Inbox defaults to '/var/mail/david' as per <mail> function
    # if set then setting 'virtual_spool_file' to either {yes,no} has no effect
unmailboxes *
unvirtual-mailboxes *
virtual-mailboxes \
  'Inbox'   "notmuch://?query=folder:$my_account/INBOX" \
  'Archive' "notmuch://?query=folder:$my_account/INBOX.Archive" \
  'Sent'    "notmuch://?query=folder:$my_account/INBOX.Sent" \
  'Drafts'  "notmuch://?query=folder:$my_account/INBOX.Drafts" \
  'Spam'    "notmuch://?query=folder:$my_account/INBOX.Spam" \
  'Junk'    "notmuch://?query=folder:$my_account/INBOX.Junk" \
  'Trash'   "notmuch://?query=folder:$my_account/INBOX.Trash"

# Hooks    {{{1

folder-hook '.' \
    "source $my_utils/neomutt_folder-hook_all"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX" \
    "source $my_utils/neomutt_folder-hook_inbox"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX.Archive" \
    "source $my_utils/neomutt_folder-hook_archive"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX.Sent" \
    "source $my_utils/neomutt_folder-hook_sent"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX.Drafts" \
    "source $my_utils/neomutt_folder-hook_drafts"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX.Spam" \
    "source $my_utils/neomutt_folder-hook_spam"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX.Junk" \
    "source $my_utils/neomutt_folder-hook_junk"
folder-hook -noregex "notmuch://?query=folder:$my_account/INBOX.Trash" \
    "source $my_utils/neomutt_folder-hook_trash"

# Sidebar    {{{1

set sidebar_visible
    # show sidebar
set sidebar_format = '%D%?F? [%F]?%* %?N?%N/?%S'
    # format of sidebat display
set mail_check_stats
    # recalculate message statistics periodically
set sort_browser = unsorted
    # sort method for file browser

# [ip] <Ctrl>+n : next sidebar vfolder
# - overrides [ip] ^N = <next-thread> (jumps to the next thread)
bind index,pager \cn sidebar-next
# [ip] <Ctrl>+p : previous sidebar vfolder
# - overrides [ip] ^P = <prev-thread> (jumps to the previous thread)
bind index,pager \cp sidebar-prev
# [ip] <Ctrl>+o : open sidebar vfolder
# - no default [ip] ^O bindings
bind index,pager \co sidebar-open

# Change mailbox    {{{1

# [ip] ci : change to Inbox vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager ci '<change-vfolder>Inbox<enter>'   'open Inbox'
# [ip] ca : change to Archive vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager ca '<change-vfolder>Archive<enter>' 'open Archive'
# [ip] cs : change to Sent vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager cs '<change-vfolder>Sent<enter>'    'open Sent'
# [ip] cd : change to Draft vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager cd '<change-vfolder>Drafts<enter>'  'open Drafts'
# [ip] cm : change to Spam vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager cm '<change-vfolder>Spam<enter>'    'open Spam'
# [ip] cj : change to Junk vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager cj '<change-vfolder>Junk<enter>'    'open Junk'
# [ip] ct : change to Trash vfolder
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager ct '<change-vfolder>Trash<enter>'   'open Trash'
# [ip] cf : select vfolder to change to
# - overrides [ip] c = <change-folder> (opens a different folder)
macro index,pager cf '<change-vfolder>?'              'open mailbox...'

# Display    {{{1

# [g] <Ctrl>+l : redraw screen (default binding)
bind generic \cl refresh
# [ip] O : reverse sort mailbox (default binding)
bind index,pager O sort-reverse
# [ip] o : sort mailbox (default binding)
bind index,pager o sort-mailbox
# [gp] ? : help (default binding)
bind generic,pager ? help

# Navigation    {{{1

# {[g] j,<Down>;[ip] J} : move to next entry (default bindings)
bind generic j next-entry
bind generic <Down> next-entry
bind index,pager J next-entry
# [ip] {j,<Down>} : move to next undeleted message (default bindings)
bind index,pager j next-undeleted
bind index,pager <Down> next-undeleted
# {[g] k,<Up>;[ip] K} : move to previous entry (default bindings)
bind generic k previous-entry
bind generic <Up> previous-entry
bind index,pager K previous-entry
# [ip] {k,<Up>} : move to next undeleted message (default bindings)
bind index,pager k previous-undeleted
bind index,pager <Up> previous-undeleted
# [ip] <Tab> : jump to next new or unread message (default binding)
bind index,pager <Tab> next-new-then-unread
# [g] < : scroll up one line (default binding)
bind generic < previous-line
# {[g] >;[p] <Return>,<Enter>,<KeypadEnter>} : scroll down one line
# (default binding)
bind generic > next-line
bind pager <Return> next-line
bind pager <Enter> next-line
bind pager <KeypadEnter> next-line
# [gp] 1-9 : jump to specified index number
# - overrides [gp] 1-9 = <jump> (jump to an index number)
macro generic,pager 1 "<jump>1<enter>"    'jump to index number 1'
macro generic,pager 2 "<jump>2<enter>"    'jump to index number 2'
macro generic,pager 3 "<jump>3<enter>"    'jump to index number 3'
macro generic,pager 4 "<jump>4<enter>"    'jump to index number 4'
macro generic,pager 5 "<jump>5<enter>"    'jump to index number 5'
macro generic,pager 6 "<jump>6<enter>"    'jump to index number 6'
macro generic,pager 7 "<jump>7<enter>"    'jump to index number 7'
macro generic,pager 8 "<jump>8<enter>"    'jump to index number 8'
macro generic,pager 9 "<jump>9<enter>"    'jump to index number 9'
# [gp] 0 : jump to an index number
# - no default [gp] 0 bindings
bind generic,pager 0 jump
# [g] <Left> : move to previous page (default binding)
bind generic <Left> previous-page
# {[g] <Right>;[p] <Space>} : move to next page (default binding)
bind generic <Right> next-page
bind pager <Space> next-page
# [gp] <PageUp> : move to previous page (default binding)
bind generic,pager <PageUp> previous-page
# [gp] <PageDown> : move to next page (default binding)
bind generic,pager <PageDown> next-page
# [g] <Home> : move to first entry (default binding)
bind generic <Home> first-entry
# [g] <End> : move to last entry (default binding)
bind generic <End> last-entry
# [p] <Home> : jump to top of message (default binding)
bind pager <Home> top
# [p] <End> : jump to bottom of message (default binding)
bind pager <End> bottom

# Search    {{{1

# [gp] {<Alt>+/,<Esc>/} : search backwards (default binding)
bind generic,pager \e/ search-reverse
# [gp] / : search (default binding)
bind generic,pager / search
# [gp] n : next match (default binding)

# Process control    {{{1

# [gp] ! : invoke subshell (default binding)
bind generic,pager ! shell-escape
# [ipa] | : pipe message/attachment to a shell command (default bindings)
bind index,pager,attach | pipe-entry
bind attach | pipe-message
# [gp] : : enter command (default binding)
bind generic,pager : enter-command
# [g] ; : tag prefix (default binding)
# - need to escape semicolon or get 'not enough arguments' error
bind generic \; tag-prefix
# {[i] x;[p] i,q,x;[a] q} : exit menu (default binding)
bind index,pager x exit
bind pager,attach q exit
bind pager i exit
# [i] q : save changes and quit (default binding)
bind index q quit

# Synchronise    {{{1

# [ip] $ : save changes to current mailbox and recalculate all mailbox stats
# - overrides [ip] $ = <sync-mailbox> (save changes to current mailbox)
macro index,pager $ "\
<sync-mailbox><check-stats>\
"    'save changes to current mailbox, recalculate all mailbox stats'
# hooks
timeout-hook 'exec sync-mailbox'
startup-hook 'exec sync-mailbox'
shutdown-hook 'exec sync-mailbox'
# }}}1


# MESSAGE MANAGEMENT


# Display    {{{1

# [g] {<Return>,<Enter>,<KeypadEnter>} : select entry (default bindings)
bind generic <Return> select-entry
bind generic <Enter> select-entry
bind generic <KeypadEnter> select-entry
# [i] {<Space>,<Return>,<Enter>,<KeypadEnter>} : display message
# (default bindings)
bind index <Space> display-message
bind index <Return> display-message
bind index <Enter> display-message
bind index <KeypadEnter> display-message

# Search for messages    {{{1

# [ip] s : search current vfolder
# - set in folder-hooks
# - overrides [ip] s = <save-message> (save msg/attachment to mailbox/file)
# [ip] X : custom search creating temporary vfolder
# - no default [ip] X bindings
bind index,pager X vfolder-from-query
# [i] ~ : create hotkey macro for message (default binding)
bind index ~ mark-message

# Threads    {{{1

# [ip] + : read thread of current message
# - no default [ip] + bindings
bind index,pager + entire-thread
# [i] za : toggle collapse of current thread
# - no default [i] z binding
bind index za collapse-thread
# [i] zA : toggle collapse of all threads
# - no default [i] z binding
bind index zA collapse-all

# Tagging    {{{1

# [gp] t : tag entry/message (default bindings)
bind generic t tag-entry
bind pager t tag-message
# [i] T : tag messages matching a pattern (default binding)
bind index T tag-pattern
# [i,p] <Insert> : tag current message
# - no default [i,p] <Insert> binding
macro index <Insert> "\
<tag-entry>\
"    'select/tag current message'
macro pager <Insert> "\
<tag-message>\
"    'select/tag current message'
# [i] <Ctrl>+a : tag all messages
# - no default [i] ^A binding
macro index \ca "\
<tag-pattern>~A<enter>\
"    'select/tag all messages'
# [i] <Ctrl>+t : untag messages matching a pattern (default binding)
bind index \ct untag-pattern
# [i] <Ctrl>+u : untag all messages
# - overrides [i] ^U = <undelete-thread> (undelete all messages in thread)
macro index \cu "\
<untag-pattern>~A<enter>\
"    'unselect/untag all messages'

# Tags (neomutt)    {{{1

# [ip] w : set status flag (default bindings)
bind index,pager w set-flag
# [ip] N : toggle new flag
# - overrides [i] N = <toggle-new> (toggle a message's 'new' flag)
macro index N "\
<tag-prefix><toggle-new>\
"    "toggle 'new' flag of messages(s)"
# - default [p] binding for N
bind pager N mark-as-new
# [i] W : clear
# - overrides [i] W = <clear-flag> (clears a status flag from current message)
macro index W "\
<tag-prefix><clear-flag>\
"    'clear a status flag from messages(s)'

# Labels (notmuch)    {{{1

# [ip] yy : manually modify
# - no default [ip] y bindings
macro index yy "\
<tag-prefix><modify-labels>\
"    'modify (notmuch/imap) tags'
bind pager yy modify-labels
# [ip] yd : add [development] label
# - no default [ip] y bindings
macro index yd "\
<enter-command>echo \
'Adding [development] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+development<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: development'
macro pager yd "\
<enter-command>echo 'Adding [development] label...'<enter>\
<modify-labels>+development<enter>\
"    'add label: development'
# [ip] yf : add [financial] label
# - no default [ip] y bindings
macro index yf "\
<enter-command>echo 'Adding [financial] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+financial<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: financial'
macro pager yf "\
<enter-command>echo 'Adding [financial] label...'<enter>\
<modify-labels>+financial<enter>\
"    'add label: financial'
# [ip] yl : add [later] label
# - no default [ip] y bindings
macro index yl "\
<enter-command>echo 'Adding [later] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+later<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: later'
macro pager yl "\
<enter-command>echo 'Adding [later] label...'<enter>\
<modify-labels>+later<enter>\
"    'add label: later'
# [ip] yo : add [order] label
# - no default [ip] y bindings
macro index yo "\
<enter-command>echo 'Adding [order] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+order<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: order'
macro pager yo "\
<enter-command>echo 'Adding [order] label...'<enter>\
<modify-labels>+order<enter>\
"    'add label: order'
# [ip] yp : add [personal] label
# - no default [ip] y bindings
macro index yp "\
<enter-command>echo 'Adding [personal] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+personal<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: personal'
macro pager yp "\
<enter-command>echo 'Adding [personal] label...'<enter>\
<modify-labels>+personal<enter>\
"    'add label: personal'
# [ip] yu : add [union] label
# - no default [ip] y bindings
macro index yu "\
<enter-command>echo 'Adding [union] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+union<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: union'
macro pager yu "\
<enter-command>echo 'Adding [union] label...'<enter>\
<modify-labels>+union<enter>\
"    'add label: union'
# [ip] yv : add [vault] label
# - no default [ip] y bindings
macro index yv "\
<enter-command>echo 'Adding [vault] label...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><modify-labels>+vault<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
"    'add label: vault'
macro pager yv "\
<enter-command>echo 'Adding [vault] label...'<enter>\
<modify-labels>+vault<enter>\
"    'add label: vault'

# Move    {{{1

set noconfirm_append
    # no confirm needed when append to mailbox

# [ip] a : archive message
# - overrides [ip] a = <create-alias> (create an alias from message sender)
macro index a "\
<enter-command>echo 'Archiving...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><clear-flag>N\
<tag-prefix><modify-labels>\
-inbox +archive -draft -spam -trash -sent -unread -new -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<tag-prefix><save-message>+INBOX.Archive<enter>\
<sync-mailbox>\
<check-stats>\
"    'move to Archive'
macro pager a "\
<enter-command>echo 'Archiving...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<clear-flag>N\
<modify-labels>\
-inbox +archive -draft -spam -trash -sent -unread -new -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<save-message>+INBOX.Archive<enter>\
<sync-mailbox>\
<check-stats>\
"    'move to Archive'
# move to other mailboxes
# [ip] MI : move to Inbox
# - overrides [i] M = <show-log-messages> (show log/debug messages)
# - no default [p] M binding
macro index MI "\
<enter-command>echo 'Moving to Inbox...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><clear-flag>N\
<tag-prefix><modify-labels>\
+inbox -archive -draft -spam -trash -sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<tag-prefix><save-message>+INBOX<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move mail to Inbox'
macro pager MI "\
<enter-command>echo 'Moving to Inbox...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<clear-flag>N\
<modify-labels>\
+inbox -archive -draft -spam -trash -sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<save-message>+INBOX<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move to Inbox'
# [ip] MD : move to Drafts
# - overrides [i] M = <show-log-messages> (show log/debug messages)
# - no default [p] M binding
macro index MD "\
<enter-command>echo 'Moving to Drafts...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><clear-flag>N\
<tag-prefix><modify-labels>\
-inbox -archive +draft -spam -trash -sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<tag-prefix><save-message>+INBOX.Drafts<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move mail to Drafts'
macro pager MD "\
<enter-command>echo 'Moving to Drafts...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<clear-flag>N\
<modify-labels>\
-inbox -archive +draft -spam -trash -sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<save-message>+INBOX.Drafts<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move to Drafts'
# [ip] MJ : move to Spam
# - overrides [i] M = <show-log-messages> (show log/debug messages)
# - no default [p] M binding
macro index MJ "\
<enter-command>echo 'Moving to Spam...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><clear-flag>N\
<tag-prefix><modify-labels>\
-inbox -archive -draft +spam -trash -sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<tag-prefix><save-message>+INBOX.Spam<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move mail to Spam'
macro pager MJ "\
<enter-command>echo 'Moving to Spam...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<clear-flag>N\
<modify-labels>\
-inbox -archive -draft +spam -trash -sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<save-message>+INBOX.Spam<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move to Spam'
# [ip] MS : move to Sent
# - overrides [i] M = <show-log-messages> (show log/debug messages)
# - no default [p] M binding
macro index MS "\
<enter-command>echo 'Moving to Sent...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<tag-prefix><clear-flag>N\
<tag-prefix><modify-labels>\
-inbox -archive -draft -spam -trash +sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<tag-prefix><save-message>+INBOX.Sent<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move mail to Sent'
macro pager MS "\
<enter-command>echo 'Moving to Sent...'<enter>\
<enter-command>set my_resolve=\$resolve<enter>\
<enter-command>unset resolve<enter>\
<clear-flag>N\
<modify-labels>\
-inbox -archive -draft -spam -trash +sent -unread -junk<enter>\
<enter-command>set resolve=\$my_resolve<enter>\
<enter-command>unset my_resolve<enter>\
<save-message>+INBOX.Sent<enter>\
<sync-mailbox>\
<check-stats>\
<change-vfolder>^<enter>\
"    'move to Sent'

# Delete    {{{1

set delete = yes
    # purge deleted messages on mailbox close/syncronisation

# [a] d : delete current entry (default binding)
bind attach d delete-entry
# [ip] d,<delete> : trash messages
# - set in folder-hooks
# - trashes messages in all vfolders except Trash
# - deletes messages in Trash vfolder
# [a] u : undelete current entry (default binding)
bind attach u undelete-entry
# [ip] u : untrash message
# - in Trash folder only
# }}}1


# FETCH


# Bindings    {{{1

# [ip] G : fetch mail
# - overrides [i] G = <fetch-mail> (retrieve mail from POP server)
# - no default [p] G binding
macro index,pager G "\
<shell-escape>$my_fetch_script<enter>\
<change-vfolder>Inbox<enter>\
<sync-mailbox><check-stats>\
"    'run offlineimap to fetch mail'
# }}}1


# VIEW


# Settings    {{{1

set move
    # move read messages from $spool_file to $mbox
set mbox = +INBOX.Archive
    # folder into which read mail is appended
set attach_save_dir = $my_download_dir
    # default 'download' directory
set print_command = $my_print_pdf
    # conversion to pdf
set noprint_decode
    # do not decode message before printing
set print = ask-yes
    # check in case accidentally pressed 'p'
set nomark_old
    # no 'old' tag, 'new' is good enough
set header_cache = $my_header_cache
set message_cachedir = $my_message_cache
    # try to speed up by caching
set pager_context = 3
    # lines of overlap when PgUp and PgDown
set tilde
    # pad blank lines with tildes
set pager_stop
    # do not automatically PgDown
set noprompt_after
    # no prompt when external pager exits

# prefer html
unauto_view *
auto_view text/html \
          application/postscript \
          application/x-gunzip \
          application/x-tar-gz \
          application/octet-stream
unalternative_order *
alternative_order text/html \
                  text/plain \
                  text

# Bindings    {{{1

# [ip] e : edit/view message (default binding)
bind index,pager e edit-or-view-raw-message
# [ip] V : open message in default html viewer
# - overrides [ip] V = <show-version> (show neomutt version number and date)
macro index,pager V "\
<view-attachments>\
<search>html<enter>\
<view-mailcap>\
<exit>\
"    'open message in default browser'
# [ipac] <Ctrl>+b : view/copy urls
# no default [ipac] ^B bindings
macro index,pager \cb "\
<pipe-message>urlscan<enter>\
"    'call urlscan to extract URLs out of a message'
macro attach,compose \cb "\
<pipe-entry> urlscan<enter>\
"    'call urlscan to extract URLs out of a message'
# [ip] v : show MIME attachments (default bindings)
bind index,pager v view-attachments
# [a] {<Return>,<Enter>,<Keypadenter>} : view attachment with mailcap
# if necessary (default binding)
bind attach <Return> view-attach
bind attach <Enter> view-attach
bind attach <KeypadEnter> view-attach
# [a] m : force viewing of attachment with mailcap (default binding)
bind attach m view-mailcap
# [a] T : view attachment as text (default binding)
bind attach T view-text
# [ip] S : save all attachments
# no default [i] S binding
# overrides [p] S = <skip-quoted> (skip to beyond quoted text)
macro index,pager S "\
<pipe-message>\
ripmime -i - -d $my_download_dir && rm $my_download_dir/textfile*<enter>\
<enter-command>echo 'Attachments saved to $my_download_dir'<enter>\
"    'save all non-text attachments using ripmime'
# [ipa] p : print message (default binding)
bind index,pager p print-message
bind attach p print-entry
# [ip] C : copy content to clipboard
# no default [ip] C binding
macro index,pager C "\
<pipe-message> $my_send_clipboard<enter>\
<enter-command>echo 'Copied content to system clipboard'<enter>\
"    'copy content to clipboard as plaintext'
# }}}1


# COMPOSE


# Settings    {{{1

set real_name = $my_name
    # sender's real name
alias me $my_name <$my_email>
    # alias for sender
set from = $my_email
    # default 'from' address
set edit_headers
    # show headers when composing
ignore *
unignore From: To: CC: BCC: Subject:
    # warning: [un]ignore setting is not honoured
unhdr_order *
hdr_order From: Subject: To: Cc: Bcc:
    # warning: hdr_order setting is not honoured
set user_agent
    # include 'User-Agent:' header in sent message
set alias_file = $my_alias
    # default file in which <create-alias> saves aliases
set query_command = "echo '' && notmuch address from:/%s/"
   # used by <complete-query> function,
   # first line of results is presumed to be header so it is auto-trimmed
   # but notmuch does not include a header line
   # so the 'echo' command is a workaround for this
set editor = "\
$my_trim_quotes %s ;\
nvim -S '$my_nvim_args' +/^$/+1 '+nohlsearch' '+startinsert!' %s\
"
    # editor invocation, uses external file for initial arguments
set text_flowed
    # generate content type 'text/plain; format-flowed'
set query_format="%4c %t %-70.70a %-70.70n %?e?(%e)?"
    # format of 'query' menu
set signature = $my_signature
    # signature file
set nosig_dashes
    # no dashes before sig
set attribution="* %n <%a> [%{%Y-%m-%d %H:%M:%S %Z}]:\n"
    # string preceding message included in reply
set mime_forward = ask-no
    # asks whether to forward message as mime attachment rather than inline
set fast_reply
    # skip initial prompts when replying, jump straight to editor
set forward_format = 'Fwd: %s'
    # format of subject when forwarding
set reply_to
    # reply to address in 'Reply-To:' field rather than 'From:' field
set include
    # include message in replies
set forward_quote
    # include message in forwards
set ispell = 'aspell -e -c'
    # 'ispell' invocation

# Source aliases    {{{1

# this file is periodically regenerated by a custom script
source $my_alias

# Bindings    {{{1

# [ip] m : new message (default binding)
bind index,pager m mail
# [ipa] r : reply to message (default binding)
bind index,pager,attach r reply
# [ipa] g : reply all preserving To/Cc
# - overrides [ipa] g = group-reply (reply to all recipients)
bind index,pager,attach g group-chat-reply
# [ipa] f : forward message (default binding)
bind index,pager,attach f forward-message
# [ipa] b : remail message to another user (default binding)
bind index,pager,attach b bounce-message
# [ip] L : reply to mailing list (default binding)
bind index,pager L list-reply
# [ia] {<Alt>+e,<Esc>e} : use current message as template for new message
# (default bindings)
bind index,attach \ee resend-message
# [ipa] @ : compose new message to sender of current message (default binding)
bind index,pager,attach @ compose-to-sender
# [e] <Tab> : complete filename or alias (default binding)
bind editor <Tab> complete
# [e] <Ctrl>+t : complete email address (using $query_command)
# (default binding)
bind editor \ct complete-query
# [e] <Left> : move the cursor one character to the left (default binding)
bind editor <Left> backward-char
# [e] <Home> : jump to the beginning of the line (default binding)
bind editor <Home> bol
# [e] {<Alt>+c,<Esc>c} : capitalize the word (default binding)
bind editor \ec capitalize-word
# [e] <Delete> : delete the char under the cursor (default binding)
bind editor <Delete> delete-char
# [e] <End> : jump to the end of the line (default binding)
bind editor <End> eol
# [e] <Right> : move the cursor one character to the right (default binding)
bind editor <Right> forward-char
# [e] {<Down>,<Ctrl>+n} : scroll down through the history list
# (default binding)
bind editor \cn history-down
bind editor <Down> history-down
# [e] <Ctrl+r> : search through the history list (default binding)
bind editor \cr history-search
# [e] {<Up>,<Ctrl>+p} : scroll up through the history list (default binding)
bind editor \cp history-up
bind editor <Up> history-up
# [e] <Ctrl>+k : delete chars from cursor to end of line (default binding)
bind editor \ck kill-eol
# [e] <Ctrl>+v : quote the next typed key (default binding)
bind editor \cv quote-char
# [e] <Ctrl>+w : delete the word in front of the cursor (default binding)
bind editor \cw kill-word
# [c] A : attach multiple files with file manager
# - overrides [c] A = <attach-message> (attach messages to this message)
macro compose A "\
<shell-escape>bash $my_file_picker<enter>\
<enter-command>source $my_picker_cache<enter>\
<shell-escape>bash $my_file_picker clean<enter>\
"    'Attach files using file manager'
# }}}1


# SEND


# Settings    {{{1

set sendmail = "$my_msmtpq"
    # email sending program
set sendmail_wait = -1
    # send in background, 0 waits forever to finish
set use_from
    # include 'From:' header in sent message
set abort_noattach = ask-yes
    # check before sending if suspect attachments are missing

# Bindings    {{{1

# [c] Y : convert markdown to html and send
# - no default [c] Y binding
# - macro solution from NeoMutt Guide (https://neomutt.org/guide),
#   Chapter 5.2 'Composing Multipart Alternative Emails'
macro compose Y "\
<first-entry>\
<enter-command>set my_wait_key=\$wait_key<enter>\
<enter-command>unset wait_key<enter>\
<pipe-entry>pandoc -o $my_cache/text-alternative.html<enter>\
<attach-file>$my_cache/text-alternative.html<enter>\
<toggle-unlink><toggle-disposition>\
<tag-entry><first-entry><tag-entry><group-alternatives>\
<enter-command>set wait_key=\$my_wait_key<enter>\
<enter-command>unset my_wait_key<enter>\
<send-message>\
"    "send the message as 'multipart/alternative'"
# }}}1


# INTERFACE


# Settings    {{{1
set pager_index_lines = 8
    # show mini-index
    # warning: neither pager- nor index-bound macros work in mini-pager
set quit = ask-yes
    # don't quit accidentally
set timeout = 0
    # wait indefinitely for user input
set nowait_key
    # minimise 'Press any key to continue...' messages
set index_format = '%4C %Z %?X?%X📎&   ? \
%<[365d?%<[7d?%<[1d?%[%R]&%[%a-%d]>&%[%b-%d]>&%[%F]> \
%-20.20L (%?l?%4l&%4c?) [%g] %s'
    # format of index lines
    # - email date-time is defined by '%<[365d .. [%F]>' sequence
    #   * is a conditional date sequence
    #     (see https://neomutt.org/feature/cond-date)
    #   * test      date range       format string   example
    #     -----------------------------------------------------
    #     %[1d      today            %[%R]           12:34
    #     %[7d      last 7 days      %[%a-%d]        Thu-12
    #     %[365d    last 365 days    %[%b-%d]        Dec-10
    #     ―         older            %[%F]           2015-06-27
    # - number of MIME attachments is defined by '%X? .. & .. ?' sequence
    #   * is a conditional construct
    #   * '%X?%X📎&   ?' breaks down as:
    #      %X?           # if number is non-zero
    #         %X📎       # then display number followed by paperclip character
    #                    #   (U+1F4CE, which shows here as '📎')
    #             &   ?  # else display 3 spaces, which is equivalent to:
    #                    #   1 digit + U+1F4CE
    #                    #   (which is as wide as 2 characters)
source $my_cfgdir_d/colours.rc
    # colour scheme

# Bindings    {{{1

# [ip] MM : show log/debug messages
# - overrides [i] M = <show-log-messages> (show log/debug messages)
bind index,pager MM show-log-messages

# Startup actions    {{{1

push <show-version>
    # display version on startup
# }}}1

# vim: ft=neomuttrc fdm=marker
