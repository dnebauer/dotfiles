# variables
local arg_count bbc_output city terminal_output url_fragment

# check args
arg_count=${#}
if (( arg_count != 1 )) ; then
  (( arg_count == 0 )) && echo 'Expected 1 arg, got none' 1>&2
  (( arg_count >= 2 )) && echo "Expected 1 arg, got ${arg_count}" 1>&2
  exit 1
fi
city="${1}"

# get url fragment for the desired city
# • to find fragment for new city go to https://www.bbc.com/weather,
#   search for desired city and display its weather, then harvest
#   the fragment from the end of the page's url
case "${city}" in
  brisbane)  url_fragment=2174003;;
  darwin)    url_fragment=2073124;;
  melbourne) url_fragment=2158177;;
  sydney)    url_fragment=2147714;;
  *)         echo "Invalid city: ${city}" 1>&2;;
esac

# build url to get bbc weather data
url="https://weather-broker-cdn.api.bbci.co.uk/en/forecast/rss/3day/${url_fragment}"

# get bbc weather data
bbc_output="$(curl -s "${url}")"

# format for terminal output
# • data is in xml structured 4 levels deep
# • extract content of desired fields using awk magic
terminal_output="$(
  awk -F'</*title>' '!a[$2]++&&NF!=1 {gsub("&#xB0;","",$2); print $2}' \
  <<< "${bbc_output}"
)"

# display output
echo "${terminal_output}"
