#!/usr/bin/env bash

# File: reset-screens
# Author: David Nebauer (david at nebauer dot org)
# Purpose: Reset monitor screens if they are "confused"
# Created: 2022-04-03


# ERROR HANDLING

# Exit on error. Append "|| true" if you expect an error.
set -o errexit
# Exit on error inside any functions or subshells.
set -o errtrace
# Do not allow use of undefined vars. Use ${VAR:-} to use an undefined VAR
set -o nounset
# Catch error in case mysqldump fails (but gzip succeeds) in `mysqldump |gzip`
set -o pipefail
# Turn on traces, useful while debugging but commented out by default
# set -o xtrace

# VARIABLES

self="$(basename $0)"
usage="Usage:"
# shellcheck disable=SC2034
parameters=""
required_tools=(getopt xrandr)
unset msg


# PROCEDURES

# Show usage
#   params: nil
#   prints: nil
#   return: nil
displayUsage () {
cat << _USAGE
${self}: reset monitor screens

This script resets monitor screens. It is intended for use
in situations where the monitor configuration has become
"confused". This can occasionally happen after the system
wakes from hibernation/sleep, and presumably in other
situations as well.

This script is hard-coded to support the following screen
configuration:

* DisplayPort-0: off
* DisplayPort-1: off
*      HDMI-A-0: 3440x1440, no rotation, primary
*      HDMI-A-1: off
*       DVI-D-0: 1920x1080, no rotation, to leftof HDMI-A-0

This script uses xrandr. If executed on a system that is
running the KDE Plasma desktop environment it will also kill
and restart the "plasmashell" executable.

Warning: if this script is run from a terminal, that
terminal will display all subsequent output from
"plasmashell", including system tray applications.

${usage} ${self} ${parameters}
       ${self} -h
_USAGE
}
# Process command line options
#   params: all command line parameters
#   prints: feedback
#   return: nil
#   note:   after execution variable ARGS contains
#           remaining command line args (after options removed)
processOptions () {
	# read the command line options
    local OPTIONS="$(                             \
        getopt                                    \
            --options hvd:                       \
            --long    help,verbose,debug \
            --name    "${BASH_SOURCE[0]}"         \
            -- "${@}"                             \
    )"
    [[ ${?} -eq 0 ]] || {
        echo 'Invalid command line options' 1>&2
        exit 1
    }
    eval set -- "${OPTIONS}"
	while true ; do
		case "${1}" in
        -h | --help    ) displayUsage   ; exit 0  ;;
        -v | --verbose ) set -o verbose ; shift 1 ;;
        -d | --debug   ) set -o xtrace  ; shift 1 ;;
        --             ) shift ; break ;;
        *              ) break ;;
		esac
	done
	ARGS="${@}"  # remaining arguments
}
# Join items
#   params: 1  - delimiter
#           2+ - items to be joined
#   prints: string containing joined items
#   return: nil
function joinBy () {
    local d=$1
    shift
    local f=$1
    shift
    printf %s "$f" "${@/#/$d}"
}


# MAIN

# Check for required tools
missing=()
for tool in "${required_tools[@]}" ; do
    command -v "${tool}" &>/dev/null || missing+=("${tool}")
done
[[ ${#missing[@]} -eq 0 ]] || {
    echo "Can't run without: $(joinBy ', ' "${missing[@]}")" >/dev/stderr
    exit 1
}
unset missing tools required_tools

# Process command line options
# - results in $ARGS holding remaining non-option command line arguments
processOptions "${@}"

# Restart plasmashell if running KDE Plasma
if [[ "$DESKTOP_SESSION" = "plasma" ]]; then
    if command -v plasmashell &> /dev/null ; then
        killall plasmashell
        plasmashell &
    fi
fi

# Reset monitors using xrandr
xrandr                                            \
	--output DisplayPort-0  --off                 \
	--output DisplayPort-1  --off                 \
	--output HDMI-A-0         --primary           \
                              --mode 3440x1440    \
                              --pos 1920x0        \
                              --rotate normal     \
	--output HDMI-A-1       --off                 \
	--output DVI-D-0          --mode 1920x1080    \
                              --pos 0x180         \
                              --rotate normal     \
                              --left-of HDMI-A-0

# vim:foldmethod=marker:
