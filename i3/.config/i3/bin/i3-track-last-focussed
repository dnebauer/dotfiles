#!/usr/bin/env python3

# credit: https://www.reddit.com/r/i3wm/comments/95b2hx/comment/e3reu3q/

import i3ipc
import os

cache_file = None
last_container_id = None


def main():
    cache_file = set_cache_file_path()
    i3 = i3ipc.Connection()
    update_focus(i3.get_tree().find_focused())
    i3.on('window::focus', on_focus)
    # Could use ticks but not implemented in latest release of i3ipc-python
    try:
        i3.main()
    finally:
        i3.main_quit()


def on_focus(_, e):
    update_focus(e.container)


def update_focus(container):
    global last_container_id
    if last_container_id is not None:
        with open(cache_file, 'w') as f:
            f.write(str(last_container_id))
    last_container_id = container.id


def set_cache_file_path():
    # ensure cache file's dirpath exists
    dirpath = os.environ.get('HOME')
    dirpath = os.path.join(dirpath, '.cache')
    if not os.path.exists(dirpath):
        os.mkdir(dirpath)
    dirpath = os.path.join(dirpath, 'i3-track-last-focussed')
    if not os.path.exists(dirpath):
        os.mkdir(dirpath)
    # set cache file path
    global cache_file
    cache_file = os.path.join(dirpath, 'last-container-id')


if __name__ == '__main__':
    main()
