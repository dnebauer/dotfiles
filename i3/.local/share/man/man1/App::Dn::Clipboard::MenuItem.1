.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "MenuItem 3"
.TH MenuItem 3 2025-03-26 "perl v5.40.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Dn::Clipboard::MenuItem \- model the properties of a menu item
.SH VERSION
.IX Header "VERSION"
This documentation applies to App::Dn::Clipboard::MenuItem version 0.2.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 9
\&    use App::Dn::Clipboard::MenuItem;
\&    # ...
\&    my $menu_item = App::Dn::Clipboard::MenuItem\->new(
\&      menu    => $menu_name,
\&      hotkey  => $item{$KEY_HOTKEY},
\&      type    => $item{$KEY_TYPE},
\&      value   => $item{$KEY_VALUE},
\&      default => $item{$KEY_DEFAULT},
\&    );
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This module models a menu item.
It is used by App::Dn::Clipboard::Load and App::Dn::Clipboard::MenuItems.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Properties
.IX Subsection "Properties"
All properties are required.
.PP
\fImenu\fR
.IX Subsection "menu"
.PP
Can be anything, but is traditionally a single word with initial
capitalisation. All items with the same menu name belong to that menu \-
this is how menus are defined.
.PP
The base menu, that is, the first menu to display when this module is run,
is called "Main". This menu must be defined in the configuration file.
It is defined by having at least one menu item with a \f(CW\*(C`menu\*(C'\fR value of "Main".
.PP
All menus except the "Main" menu must be called by at least one menu item
(see the \f(CW\*(C`submenu\*(C'\fR menu item key).
.PP
\fIhotkey\fR
.IX Subsection "hotkey"
.PP
This single character must be unique within a menu.
.PP
\fItype\fR
.IX Subsection "type"
.PP
Indicate whether the menu item represents a value for loading into the
clipboard or represents a submenu.
Valid values: 'option', 'submenu'.
.PP
\fIvalue\fR
.IX Subsection "value"
.PP
This is either the text string to be loaded into the clipboard
(for \f(CW\*(C`type\*(C'\fR = "option") or the name of a submenu to be invoked
(\f(CW\*(C`type\*(C'\fR = "submenu").
All called submenu names must correspond to defined menus
(see the \f(CW\*(C`menu\*(C'\fR menu item key).
.PP
An "option" value is displayed in the menu item without alteration.
.PP
A "submenu" value is displayed in the menu item with a trailing " \-\->".
.PP
For "option" values there are special tokens which signify the current date in
a particular format. The menu item value must contain only the token string
with no additional characters.
.PP
Available date tokens are:
.RS 4
.ie n .IP \fR\fI%current_date_full\fR\fI%\fR 4
.el .IP \fR\f(CI%current_date_full\fR\fI%\fR 4
.IX Item "%current_date_full%"
Example: 1 December 2022
.ie n .IP \fR\fI%current_date_full_nbsp\fR\fI%\fR 4
.el .IP \fR\f(CI%current_date_full_nbsp\fR\fI%\fR 4
.IX Item "%current_date_full_nbsp%"
As for "%current_date_full%" except that spaces are replaced with
non-breaking spaces
.ie n .IP \fR\fI%current_date_iso\fR\fI%\fR 4
.el .IP \fR\f(CI%current_date_iso\fR\fI%\fR 4
.IX Item "%current_date_iso%"
Example: 2022\-12\-01
.ie n .IP \fR\fI%current_date_rfc\fR\fI%\fR 4
.el .IP \fR\f(CI%current_date_rfc\fR\fI%\fR 4
.IX Item "%current_date_rfc%"
Example: Thu,  1 Dec 2022 18:51:37 +0930
.Sp
The system time zone is used and day numbers less than 10 have a leading space.
.RE
.RS 4
.RE
.PP
\fIdefault\fR
.IX Subsection "default"
.PP
Whether the menu item is the default selection for the menu.
At least one menu item per menu can have a true value.
No more than one menu item per menu can have a true value.
Required. Boolean. By convention 1 is true while 0 is false.
.SS "Configuration files"
.IX Subsection "Configuration files"
None used.
.SS "Environmental variables"
.IX Subsection "Environmental variables"
None used.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
None defined.
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
No warning or error messages are generated.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
Const::Fast, Moo, namespace::clean, strictures, Types::Standard, version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <mailto:david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2022 David Nebauer <mailto:david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
