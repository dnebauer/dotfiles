.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.0102 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Monitor 3"
.TH Monitor 3 2025-04-02 "perl v5.40.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
App::Dn::KDEConnect::Monitor \- monitor connected devices using kdeconnect
.SH VERSION
.IX Header "VERSION"
This documentation applies to App::Dn::KDEConnect::Monitor version 0.1.
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 2
\&    use App::Dn::KDEConnect::Monitor;
\&    App::Dn::KDEConnect::Monitor\->new_with_options\->run;
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
Periodically uses \f(CW\*(C`kdeconnect\-cli\*(C'\fR to try and connect unconnected devices.
The user is notified if 3\ consecutive attempts to connect a device fail,
following which the check interval lengthens with each failed connection
attempt until the interval is at least 1.5\ hours.
.PP
Devices are specified in a configuration file.
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.SS Properties
.IX Subsection "Properties"
None.
.SS "Configuration files"
.IX Subsection "Configuration files"
Uses a configuration file with the file name stem 'kdeconnect\-monitor\-data'
placed in one of the usual configuration file locations.
(See File::ConfigDir and Config::Any for further details.)
.PP
Any of the file formats supported by Config::Any can be used.
There must be a section called 'devices' within which are key:value pairs where
keys are device names and values are corresponding ids.
Device names and ids can be obtained using \f(CW\*(C`kdeconnect\-cli\*(C'\fR once they are
connected.
.PP
Here is an example configuration file located in
\&\fR\f(CI$HOME\fR\fI/.config/kdeconnect\-monitor\-data.json\fR:
.PP
.Vb 5
\&    {
\&      "devices": {
\&        "Galaxy S10e": "61ed761205f01d63"
\&      }
\&    }
.Ve
.SS "Environment variables"
.IX Subsection "Environment variables"
None used.
.SH SUBROUTINES/METHODS
.IX Header "SUBROUTINES/METHODS"
.SS \fBrun()\fP
.IX Subsection "run()"
The only public method. This method enables the monitoring of connectable
devices as described in "DESCRIPTION".
.SH DIAGNOSTICS
.IX Header "DIAGNOSTICS"
.SS "Expected hashref config data, got a non-ref"
.IX Subsection "Expected hashref config data, got a non-ref"
.SS "Expected hashref config data, got a REF_TYPE ref"
.IX Subsection "Expected hashref config data, got a REF_TYPE ref"
These fatal errors occur when the retrieved configuration data is in an
unexpected format. See App::Dn::KDEConnect::Config for more details.
.SS "No 'devices' section found in configuration file"
.IX Subsection "No 'devices' section found in configuration file"
.SS "No device data found in configuration files"
.IX Subsection "No device data found in configuration files"
These fatal errors occur when the configuration data contains no defined
devices.
.SS "kdeconnect-cli list devices command failed: ERROR_MESSAGE"
.IX Subsection "kdeconnect-cli list devices command failed: ERROR_MESSAGE"
.SS "kdeconnect-cli refresh command failed: ERROR_MESSAGE"
.IX Subsection "kdeconnect-cli refresh command failed: ERROR_MESSAGE"
.SS "kdeconnect-cli list available devices command failed: ERROR_MESSAGE"
.IX Subsection "kdeconnect-cli list available devices command failed: ERROR_MESSAGE"
These fatal errors occurs when \f(CW\*(C`kdeconnect\-cli\*(C'\fR exits with an error status.
.SS "Incomprehensible data from kdeconnect-cli: 'LINE'"
.IX Subsection "Incomprehensible data from kdeconnect-cli: 'LINE'"
This fatal error occurs when a line of output from \f(CW\*(C`kdeconnect\-cli\*(C'\fR cannot be
parsed.
.PP
\&\fINote:\fR Subsidiary modules may emit their own warning and error messages.
.SH INCOMPATIBILITIES
.IX Header "INCOMPATIBILITIES"
There are no known incompatibilities.
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs to the author.
.SH DEPENDENCIES
.IX Header "DEPENDENCIES"
.SS "Perl modules"
.IX Subsection "Perl modules"
App::Dn::KDEConnect::CommandResult, App::Dn::KDEConnect::Config,
App::Dn::KDEConnect::Device, Carp, Const::Fast, Desktop::Notify, IPC::Cmd, Moo,
MooX::HandlesVia, MooX::Options, Types::Standard, namespace::clean, strictures,
version.
.SH AUTHOR
.IX Header "AUTHOR"
David Nebauer <mailto:david@nebauer.org>
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2025 David Nebauer <mailto:david@nebauer.org>
.PP
This script is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.
